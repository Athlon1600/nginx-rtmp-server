user root;

worker_processes auto;
#rtmp_auto_push on;
events {}

error_log /tmp/error.log info;
error_log stderr warn;

rtmp {

    server {
        listen 1935;

        ## nginx fails to resolve custom hostnames when using docker
        # https://stackoverflow.com/a/35516395/14128684
        # listen [::]:1935 ipv6only=off;

        # max_streams 32;
        idle_streams off;
        chunk_size 4096;

        # ingest only. playable only from within docker network
        application live {
            live on;

            allow publish all;
            allow play 172.0.0.1;
            allow play 172.16.0.0/12;
            # allow play all;

            idle_streams off;
            drop_idle_publisher 10s;

            on_publish http://api_server:3000/on_publish;
            on_publish_done http://api_server:3000/on_publish_done;

            # frequent issue with this: https://github.com/arut/nginx-rtmp-module/issues/568
            # push rtmp://localhost/hls/;

            ## never deletes old segments for some reason. Fix? -hls_wrap 5
            exec mkdir -p /tmp/hls/$name/src;
            exec ffmpeg -re -i rtmp://localhost/live/$name -c copy -f hls -hls_time 4 -hls_list_size 5 -hls_flags delete_segments -hls_start_number_source epoch -hls_playlist_type event /tmp/hls/$name/src/index.m3u8;

            # TODO: handle this on separate server by listening to on_publish triggers
            # exec mkdir -p /tmp/hls/$name/480p;
            # exec ffmpeg -re -i rtmp://localhost/live/$name -c:v libx264 -crf 23 -preset veryfast -s 640x480 -c:a aac -b:a 128k -ac 2 -f hls -hls_time 4 -hls_segment_filename '%s-%04d.ts' -hls_playlist_type event /tmp/hls/$name/480p/index.m3u8;
        }

        application transcode_480 {
            # transcoded bytes from another server should be sent to this app
        }

        application hls {

            live on;
            allow publish 127.0.0.1;
            deny publish all;

            hls on;
            hls_path /tmp/hls;

            # default: live
            hls_type event;

            hls_nested on;
            hls_fragment_naming system;
            # dont know what this does
            hls_fragment_naming_granularity 1000;
            # Apple recommendation.
            hls_fragment 6s;

            ## others
            hls_fragment_slicing aligned;
            # hls_sync 1ms;

            # start deleting older fragments after 5 mins. defaults to 30 seconds.
            # bitwave has this at 900s
            hls_playlist_length 60s;

            # hls_variant _low BANDWIDTH=288000; # Low bitrate, sub-SD resolution
            # hls_variant _src BANDWIDTH=4096000; # Source bitrate, source resolution
        }
    }
}

# https://www.digitalocean.com/community/tools/nginx
http {

    access_log off;
    # https://gist.github.com/denji/8359866
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    # why have them?
    etag off;
    if_modified_since off;

    server {
        listen 80;
        root /tmp;

        # avoid issues with cross-domain HTTP requests
        add_header Access-Control-Allow-Origin * always;
        expires epoch;

        include /usr/local/nginx/conf/mime.types;

        location / {
            root /usr/local/nginx/html;
        }

        location /hls {
            # holds .ts and .m3u8 files only
        }

        location ~.*ts$ {
            # forever to be cached!
            expires max;
        }

        location ~.*m3u8$ {
            # never to be cached!
            expires epoch;
        }

        location /stat {
            rtmp_stat all;
            # allow 172.16.0.0/14;
            # deny all;
            # rtmp_stat_format json;
        }
    }
}